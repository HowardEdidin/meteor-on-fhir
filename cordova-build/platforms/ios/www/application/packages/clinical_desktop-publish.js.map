{"version":3,"sources":["meteor://ðŸ’»app/packages/clinical:desktop-publish/autopublish.js","meteor://ðŸ’»app/packages/clinical:desktop-publish/security.js","meteor://ðŸ’»app/packages/clinical:desktop-publish/lib/PublishingHouse.js"],"names":["get","module","link","v","Mongo","Meteor","isClient","console","log","startup","AllergyIntolerances","Collection","Conditions","CarePlans","Contracts","Communications","Devices","DiagnosticReports","Endpoints","Encounters","FamilyMemberHistories","Goals","HealthcareServices","ImagingStudies","Immunizations","Lists","Locations","Medications","MedicationOrders","MedicationStatements","Observations","Organizations","Patients","Persons","Practitioners","Questionnaires","QuestionnaireResponses","RiskAssessments","RelatedPersons","PractitionerRoles","Procedures","Subscriptions","Package","subscribe","isServer","publish","query","check","Match","Maybe","Object","userId","call","AuditEvents","find","Consents","PublishingHouse","count","exportDefault"],"mappings":"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,GAAG,IAAIhC,KAAK,CAACO,UAAV,CAAqB,IAArB,CAAzB;AACA8B,iBAAa,GAAG,IAAIrC,KAAK,CAACO,UAAV,CAAqB,IAArB,CAAhB;AAGAJ,WAAO,CAACC,GAAR,CAAY,4CAAZ,EAvCwB,CAyCxB;AACA;AACA;;AACA,QAAGkC,OAAO,CAAC,mCAAD,CAAV,EAAgD;AAC9CnC,aAAO,CAACC,GAAR,CAAY,0BAAZ;AACAH,YAAM,CAACsC,SAAP,CAAiB,aAAjB,EAAgC,EAAhC;AACD,KA/CuB,CAgDxB;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAGD,OAAO,CAAC,+BAAD,CAAV,EAA4C;AAC1CnC,aAAO,CAACC,GAAR,CAAY,uBAAZ;AACAH,YAAM,CAACsC,SAAP,CAAiB,UAAjB,EAA6B,EAA7B;AACD,KAzDuB,CA0DxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACD,GAtJD;AAuJD;;AAOD,IAAItC,MAAM,CAACuC,QAAX,EAAoB;AAClBrC,SAAO,CAACC,GAAR,CAAY,uCAAZ;AAEAH,QAAM,CAACI,OAAP,CAAe,YAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACEJ,UAAM,CAACwC,OAAP,CAAe,aAAf,EAA8B,UAAUC,KAAV,EAAgB;AAC5CC,WAAK,CAACD,KAAD,EAAQE,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAR,CAAL;;AACA,UAAGlD,GAAG,CAACK,MAAD,EAAS,+CAAT,CAAN,EAAgE;AAC9D,YAAI,KAAK8C,MAAT,EAAiB;AACf9C,gBAAM,CAAC+C,IAAP,CAAY,oBAAZ,EAAkC,aAAlC,EAAiDN,KAAjD,EAAwD,EAAxD;AACA,iBAAOO,WAAW,CAACC,IAAZ,CAAiBR,KAAjB,CAAP;AACD,SAHD,MAGO;AACLzC,gBAAM,CAAC+C,IAAP,CAAY,oBAAZ,EAAkC,aAAlC;AACA,iBAAO,EAAP;AACD;AACF,OARD,MAQO;AACL/C,cAAM,CAAC+C,IAAP,CAAY,oBAAZ,EAAkC,aAAlC,EAAiDN,KAAjD,EAAwD,EAAxD;AACA,eAAOO,WAAW,CAACC,IAAZ,CAAiBR,KAAjB,CAAP;AACD;AACF,KAdD,EAnBsB,CAkCxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAGJ,OAAO,CAAC,+BAAD,CAAV,EAA4C;AAC1CrC,YAAM,CAACwC,OAAP,CAAe,UAAf,EAA2B,UAAUC,KAAV,EAAgB;AACzCC,aAAK,CAACD,KAAD,EAAQE,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAR,CAAL;;AACA,YAAGlD,GAAG,CAACK,MAAD,EAAS,+CAAT,CAAN,EAAgE;AAC9D,cAAI,KAAK8C,MAAT,EAAiB;AACf9C,kBAAM,CAAC+C,IAAP,CAAY,oBAAZ,EAAkC,UAAlC,EAA8CN,KAA9C,EAAqD,EAArD;AACA,mBAAOS,QAAQ,CAACD,IAAT,CAAcR,KAAd,CAAP;AACD,WAHD,MAGO;AACLzC,kBAAM,CAAC+C,IAAP,CAAY,oBAAZ,EAAkC,UAAlC;AACA,mBAAO,EAAP;AACD;AACF,SARD,MAQO;AACL/C,gBAAM,CAAC+C,IAAP,CAAY,oBAAZ,EAAkC,UAAlC,EAA8CN,KAA9C,EAAqD,EAArD;AACA,iBAAOS,QAAQ,CAACD,IAAT,CAAcR,KAAd,CAAP;AACD;AACF,OAdD;AAeD,KA/GuB,CAgpoBD,EAHkB,CA2oBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,C;;;;;;;;;;;AC9zBD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,I;;;;;;;;;;;ACvMAU,eAAe,GAAG;AACdC,OAAK,EAAE,YAAU;AACb,WAAO,EAAP;AACH;AAHa,CAAlB;AAFAxD,MAAM,CAACyD,aAAP,CAQeF,eARf,E","file":"/packages/clinical_desktop-publish.js","sourcesContent":["import { get } from 'lodash';\nimport { Mongo } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\n\n\n\n\nif (Meteor.isClient){\n  console.log('Autosubscribing to server data streams.')\n\n  Meteor.startup(function() {\n    console.log('Turning off FHIR channels that contain Protected Health Information...')\n\n    AllergyIntolerances = new Mongo.Collection(null);\n    Conditions = new Mongo.Collection(null);\n    CarePlans = new Mongo.Collection(null);\n    // Consents = new Mongo.Collection(null);\n    Contracts = new Mongo.Collection(null);\n    Communications = new Mongo.Collection(null);\n    Devices = new Mongo.Collection(null);\n    DiagnosticReports = new Mongo.Collection(null);\n    Endpoints = new Mongo.Collection(null);\n    Encounters = new Mongo.Collection(null);\n    FamilyMemberHistories = new Mongo.Collection(null);\n    Goals = new Mongo.Collection(null);\n    HealthcareServices = new Mongo.Collection(null);\n    ImagingStudies = new Mongo.Collection(null);\n    Immunizations = new Mongo.Collection(null);\n    Lists = new Mongo.Collection(null);\n    Locations = new Mongo.Collection(null);\n    Medications = new Mongo.Collection(null);\n    MedicationOrders = new Mongo.Collection(null);\n    MedicationStatements = new Mongo.Collection(null);\n    Observations = new Mongo.Collection(null);\n    Organizations = new Mongo.Collection(null);\n    Patients = new Mongo.Collection(null);\n    Persons = new Mongo.Collection(null);\n    Practitioners = new Mongo.Collection(null);\n    Questionnaires = new Mongo.Collection(null);\n    QuestionnaireResponses = new Mongo.Collection(null);\n    RiskAssessments = new Mongo.Collection(null);\n    RelatedPersons = new Mongo.Collection(null);\n    PractitionerRoles = new Mongo.Collection(null);\n    Procedures = new Mongo.Collection(null);\n    Questionnaires = new Mongo.Collection(null);\n    QuestionnaireResponses = new Mongo.Collection(null);\n    Subscriptions = new Mongo.Collection(null);\n\n\n    console.log('Turning on administrative FHIR channels...')\n\n    // if(Package['clinical:hl7-resource-allergy-intolerance']){\n    //   Meteor.subscribe(\"AllergyIntolerances\", {});\n    // }\n    if(Package['clinical:hl7-resource-audit-event']){\n      console.log('AuditEvents - subscribed')\n      Meteor.subscribe(\"AuditEvents\", {});\n    }\n    // if(Package['clinical:hl7-resource-condition']){\n    //   Meteor.subscribe(\"Conditions\", {});\n    // }\n    // if(Package['clinical:hl7-resource-careplan']){\n    //   Meteor.subscribe(\"CarePlans\", {});\n    // }\n    if(Package['clinical:hl7-resource-consent']){\n      console.log('Consents - subscribed')\n      Meteor.subscribe(\"Consents\", {});\n    }\n    // if(Package['clinical:hl7-resource-contract']){\n    //   Meteor.subscribe(\"Contracts\", {});\n    // }     \n    // if(Package['clinical:hl7-resource-communication']){\n    //   Meteor.subscribe(\"Communications\", {});\n    // }            \n    // if(Package['clinical:hl7-resource-device']){\n    //   Meteor.subscribe(\"Devices\", {});\n    // }\n    // if(Package['clinical:hl7-resource-diagnostic-report']){\n    //   Meteor.subscribe(\"DiagnosticReports\", {});\n    // }\n    // if (Package['clinical:hl7-resource-endpoint']){\n    //   Meteor.subscribe(\"Endpoints\", {});\n    // }\n    // if(Package['clinical:hl7-resource-encounter']){\n    //   Meteor.subscribe(\"Encounters\", {});\n    // }\n    // if(Package['clinical:hl7-resource-family-member-history']){\n    //   Meteor.subscribe(\"FamilyMemberHistories\", {});\n    // }\n\n\n    // if(Package['clinical:hl7-resource-healthcare-service']){\n    //   Meteor.subscribe(\"HealthcareServices\", {});\n    // }\n    // if(Package['clinical:hl7-resource-imaging-study']){\n    //   Meteor.subscribe(\"ImagingStudies\", {});\n    // }\n    // if(Package['clinical:hl7-resource-immunization']){\n    //   Meteor.subscribe(\"Immunizations\", {});\n    // }\n    // if(Package['clinical:hl7-resource-list']){\n    //   Meteor.subscribe(\"Lists\", {});\n    // }\n    // if(Package['clinical:hl7-resource-location']){\n    //   Meteor.subscribe(\"Locations\", {});\n    // }\n    // if(Package['clinical:hl7-resource-medication']){\n    //   Meteor.subscribe(\"Medications\", {});\n    // }\n    // if(Package['clinical:hl7-resource-medication-order']){\n    //   Meteor.subscribe(\"MedicationOrders\", {});\n    // }\n    // if(Package['clinical:hl7-resource-medication-statement']){\n    //   Meteor.subscribe(\"MedicationStatements\", {});\n    // }\n    // if(Package['clinical:hl7-resource-observation']){\n    //   Meteor.subscribe(\"Observations\", {});\n    // }\n    // if(Package['clinical:hl7-resource-organization']){\n    //   Meteor.subscribe(\"Organizations\", {});\n    // }\n    // if(Package['clinical:hl7-resource-patient']){\n    //   Meteor.subscribe(\"Patients\", {});\n    // }\n    // if(Package['clinical:hl7-resource-person']){\n    //   Meteor.subscribe(\"Persons\", {});\n    // }\n    // if(Package['clinical:hl7-resource-practitioner']){\n    //   Meteor.subscribe(\"Practitioners\", {});\n    // }      \n    // if(Package['clinical:hl7-resource-questionnaire']){\n    //   Meteor.subscribe(\"Questionnaires\", {});\n    // }\n    // if(Package['clinical:hl7-resource-questionnaire-response']){\n    //   Meteor.subscribe(\"QuestionnaireResponses\", {});\n    // }\n    // if(Package['clinical:hl7-resource-risk-assessment']){\n    //   Meteor.subscribe(\"RiskAssessments\", {});\n    // }\n    // if(Package['clinical:hl7-resource-related-person']){\n    //   Meteor.subscribe(\"RelatedPersons\", {});\n    // }\n\n    // if(Package['clinical:hl7-resource-practitioner-role']){\n    //   Meteor.subscribe(\"PractitionerRoles\", {});\n    // }\n    // if(Package['clinical:hl7-resource-procedure']){\n    //   Meteor.subscribe(\"Procedures\", {});\n    // }      \n\n    // if(Package['clinical:hl7-resource-questionnaire']){\n    //   Meteor.subscribe(\"Questionnaires\", {});\n    // }      \n    // if(Package['clinical:hl7-resource-questionnaire-response']){\n    //   Meteor.subscribe(\"QuestionnaireResponses\", {});\n    // }      \n\n    // if(Package['clinical:hl7-resource-subscription']){\n    //   Meteor.subscribe(\"Subscriptions\", {});\n    // }      \n  });\n}\n\n\n\n\n\n\nif (Meteor.isServer){\n  console.log('Autopublishing loaded FHIR resources.')\n\n  Meteor.startup(function() {\n//     if(Package['clinical:hl7-resource-allergy-intolerance']){\n//       Meteor.publish(\"AllergyIntolerances\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"AllergyIntolerances\", query, {})\n//             return AllergyIntolerances.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"AllergyIntolerances\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"AllergyIntolerances\", query, {})\n//           return AllergyIntolerances.find(query);\n//         }\n//       });\n//     }   \n    // if(Package['clinical:hl7-resource-audit-event']){\n      Meteor.publish(\"AuditEvents\", function (query){\n        check(query, Match.Maybe(Object))\n        if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n          if (this.userId) {\n            Meteor.call('createSubscription', \"AuditEvents\", query, {})\n            return AuditEvents.find(query);\n          } else {\n            Meteor.call('removeSubscription', \"AuditEvents\")\n            return [];\n          }  \n        } else {\n          Meteor.call('createSubscription', \"AuditEvents\", query, {})\n          return AuditEvents.find(query);\n        }\n      });\n    // }\n//     if(Package['clinical:hl7-resource-careplan']){\n//       Meteor.publish(\"CarePlans\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(typeof query === \"undefined\"){\n//           query = {};\n//         }\n//         let options = {\n//           sort: {}\n//         };\n//         options.sort['meta.lastUpdated'] = -1\n\n\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"CarePlans\", query, options)\n//             return CarePlans.find(query, options);\n//           } else {\n//             Meteor.call('removeSubscription', \"CarePlans\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"CarePlans\", query, options)\n//           return CarePlans.find(query, options);\n//         }\n//       });\n//     }    \n//     if(Package['clinical:hl7-resource-communication']){\n//       Meteor.publish(\"Communications\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Communications\", query, {})\n//             return Communications.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Communications\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Communications\", query, {})\n//           return Communications.find(query);\n//         }\n//       });\n//     }    \n//     if(Package['clinical:hl7-resource-condition']){\n//       Meteor.publish(\"Conditions\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Conditions\", query, {})\n//             return Conditions.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Conditions\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Conditions\", query, {})\n//           return Conditions.find(query);\n//         }\n//       });\n//     }         \n    if(Package['clinical:hl7-resource-consent']){\n      Meteor.publish(\"Consents\", function (query){\n        check(query, Match.Maybe(Object))\n        if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n          if (this.userId) {\n            Meteor.call('createSubscription', \"Consents\", query, {})\n            return Consents.find(query);\n          } else {\n            Meteor.call('removeSubscription', \"Consents\")\n            return [];\n          }  \n        } else {\n          Meteor.call('createSubscription', \"Consents\", query, {})\n          return Consents.find(query);\n        }\n      });\n    }     \n//     if(Package['clinical:hl7-resource-contract']){\n//       Meteor.publish(\"Contracts\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Contracts\", query, {})\n//             return Contracts.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Contracts\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Contracts\", query, {})\n//           return Contracts.find(query);\n//         }\n//       });\n//     }     \n//     if(Package['clinical:hl7-resource-device']){\n//       Meteor.publish(\"Devices\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Devices\", query, {})\n//             return Devices.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Devices\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Devices\", query, {})\n//           return Devices.find(query);\n//         }\n//       });\n//     }     \n\n//     if(Package['clinical:hl7-resource-diagnostic-report']){\n//       Meteor.publish(\"DiagnosticReports\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"DiagnosticReports\", query, {})\n//             return DiagnosticReports.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"DiagnosticReports\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"DiagnosticReports\", query, {})\n//           return DiagnosticReports.find(query);\n//         }\n//       });\n//     }\n\n//     if(Package['clinical:hl7-resource-encounter']){\n//       Meteor.publish(\"Encounters\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Encounters\", query, {})\n//             return Encounters.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Encounters\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Encounters\", query, {})\n//           return Encounters.find(query);\n//         }\n//       });\n//     }   \n//     if(Package['clinical:hl7-resource-endpoint']){\n//       Meteor.publish(\"Endpoints\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Endpoints\", query, {})\n//             return Endpoints.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Endpoints\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Endpoints\", query, {})\n//           return Endpoints.find(query);\n//         }\n//       });\n//     }   \n//     if(Package['clinical:hl7-resource-family-member-history']){\n//       Meteor.publish(\"FamilyMemberHistories\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"FamilyMemberHistories\", query, {})\n//             return FamilyMemberHistories.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"FamilyMemberHistories\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"FamilyMemberHistories\", query, {})\n//           return FamilyMemberHistories.find(query);\n//         }\n//       });\n//     }\n\n\n//     if(Package['clinical:hl7-resource-healthcare-service']){\n//       Meteor.publish(\"HealthcareServices\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"HealthcareServices\", query, {})\n//             return HealthcareServices.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"HealthcareServices\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"HealthcareServices\", query, {})\n//           return HealthcareServices.find(query);\n//         }\n//       });\n//     }\n\n\n//     if(Package['clinical:hl7-resource-imaging-study']){\n//       Meteor.publish(\"ImagingStudies\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"ImagingStudies\", query, {})\n//             return ImagingStudies.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"ImagingStudies\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"ImagingStudies\", query, {})\n//           return ImagingStudies.find(query);\n//         }\n//       });\n//     }\n//     if(Package['clinical:hl7-resource-immunization']){\n//       Meteor.publish(\"Immunizations\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Immunizations\", query, {})\n//             return Immunizations.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Immunizations\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Immunizations\", query, {})\n//           return Immunizations.find(query);\n//         }\n//       });\n//     }\n\n//     if(Package['clinical:hl7-resource-list']){\n//       Meteor.publish(\"Lists\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Communications\", query, {})\n//             return Lists.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Lists\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Communications\", query, {})\n//           return Lists.find(query);\n//         }\n//       });\n//     }\n//     if(Package['clinical:hl7-resource-location']){\n//       Meteor.publish(\"Locations\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Locations\", query, {})\n//             return Locations.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Locations\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Locations\", query, {})\n//           return Locations.find(query);\n//         }\n//       });\n//     }\n//     if(Package['clinical:hl7-resource-medication']){\n//       Meteor.publish(\"Medications\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(typeof query === \"undefined\"){\n//           query = {};\n//         }\n//         let options = {\n//           sort: {}\n//         };\n//         options.sort['meta.lastUpdated'] = -1\n\n\n\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Medications\", query, options)\n//             return Medications.find(query, options);\n//           } else {\n//             Meteor.call('removeSubscription', \"Medications\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Medications\", query, {})\n//           return Medications.find(query);\n//         }\n//       });\n//     }    \n//     if(Package['clinical:hl7-resource-medication-statement']){\n//       Meteor.publish(\"MedicationStatements\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"MedicationStatements\", query, {})\n//             return MedicationStatements.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"MedicationStatements\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"MedicationStatements\", query, {})\n//           return MedicationStatements.find(query);\n//         }\n//       });\n//     }        \n//     if(Package['clinical:hl7-resource-medication-order']){\n//       Meteor.publish(\"MedicationOrders\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"MedicationOrders\", query, {})\n//             return MedicationOrders.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"MedicationOrders\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"MedicationOrders\", query, {})\n//           return MedicationOrders.find(query);\n//         }\n//       });\n//     }   \n//     if(Package['clinical:hl7-resource-organization']){\n//       Meteor.publish(\"Organizations\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Organizations\", query, {})\n//             return Organizations.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Organizations\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Organizations\", query, {})\n//           return Organizations.find(query);\n//         }\n//       });\n//     }\n\n//     if(Package['clinical:hl7-resource-observation']){\n//       Meteor.publish('Observations', function (query){\n//         check(query, Match.Maybe(Object))\n//         if(typeof query === \"undefined\"){\n//           query = {};\n//         }\n\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Observations\", query, {})\n//             return Observations.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Observations\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Observations\", query, {})\n//           return Observations.find(query);\n//         }\n//       });\n//     }\n\n//     if(Package['clinical:hl7-resource-practitioner']){\n//       Meteor.publish(\"Practitioners\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Practitioners\", query, {})\n//             return Practitioners.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Practitioners\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Practitioners\", query, {})\n//           return Practitioners.find(query);\n//         }\n//       });\n//     }    \n\n//     if(Package['clinical:hl7-resource-practitioner-role']){\n//       Meteor.publish(\"PractitionerRoles\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"PractitionerRoles\", query, {})\n//             return PractitionerRoles.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"PractitionerRoles\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"PractitionerRoles\", query, {})\n//           return PractitionerRoles.find(query);\n//         }\n//       });\n//     }\n\n\n//     if(Package['clinical:hl7-resource-patient']){\n//       Meteor.publish(\"Patients\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(typeof query === \"undefined\"){\n//           query = {};\n//         }\n//         let options = {\n//           sort: {}\n//         };\n//         options.sort['meta.lastUpdated'] = -1\n\n\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (!query) {\n//             query = {};\n//           }\n  \n//           if (get(Meteor, 'settings.public.defaults.subscriptionLimit')) {\n//             options.limit = get(Meteor, 'settings.public.defaults.subscriptionLimit');\n//           }\n\n//           // user is logged in\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Patients\", query, options)\n//             return Patients.find(query, options);\n//           } else {\n//             Meteor.call('removeSubscription', \"Patients\")\n//             return [];\n//           }\n//         } else {\n//           Meteor.call('createSubscription', \"Patients\", query, options)\n//           return Patients.find(query);\n//         }\n//       });\n//     }\n\n//     if(Package['clinical:hl7-resource-person']){\n//       Meteor.publish(\"Persons\", function (query){\n//         if(!query){\n//           query = {};\n//         }\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Persons\", query, {})\n//             return Persons.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Persons\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Persons\", query, {})\n//           return Persons.find(query);\n//         }\n//       });\n//     }    \n\n\n//     if(Package['clinical:hl7-resource-questionnaire-response']){\n//       Meteor.publish(\"QuestionnaireResponses\", function (query){\n//         if(!query){\n//           query = {};\n//         }\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"QuestionnaireResponses\", query, {})\n//             return QuestionnaireResponses.find(query);\n//           } else {\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"QuestionnaireResponses\", query, {})\n//           return QuestionnaireResponses.find(query);\n//         }\n//       });\n//     }\n//     if(Package['clinical:hl7-resource-questionnaire']){\n//       Meteor.publish(\"Questionnaires\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Questionnaires\", query, {})\n//             return Questionnaires.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Questionnaires\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Questionnaires\", query, {})\n//           return Questionnaires.find(query);\n//         }\n//       });\n//     }\n\n\n//     if(Package['clinical:hl7-resource-related-person']){\n//       Meteor.publish(\"RelatedPersons\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"RelatedPersons\", query, {})\n//             return RelatedPersons.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"RelatedPersons\")\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"RelatedPersons\", query, {})\n//           return RelatedPersons.find(query);\n//         }\n//       });\n//     }   \n\n//     if(Package['clinical:hl7-resource-risk-assessment']){\n//       Meteor.publish(\"RiskAssessments\", function (query){\n//         check(query, Match.Maybe(Object))\n//         let options = {\n//           sort: {}\n//         };\n//         options.sort['meta.lastUpdated'] = -1\n\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (!query) {\n//             query = {};\n//           }\n    \n//           if (get(Meteor, 'settings.public.defaults.subscriptionLimit')) {\n//             options.limit = get(Meteor, 'settings.public.defaults.subscriptionLimit');\n//           }\n\n//           // user is logged in\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"RiskAssessments\", query, options)\n//             return RiskAssessments.find(query, options);\n//           } else {\n//             Meteor.call('removeSubscription', \"RiskAssessments\")\n//             return [];\n//           }\n//         } else {\n//           Meteor.call('createSubscription', \"RiskAssessments\", query, options)\n//           return RiskAssessments.find(query);\n//         }        \n//       });\n//     }   \n\n\n//     if(Package['clinical:hl7-resource-procedure']){\n//       Meteor.publish(\"Procedures\", function (query){\n//         check(query, Match.Maybe(Object))\n//         if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//           if (this.userId) {\n//             Meteor.call('createSubscription', \"Procedures\", query, {})\n//             return Procedures.find(query);\n//           } else {\n//             Meteor.call('removeSubscription', \"Procedures\");\n//             return [];\n//           }  \n//         } else {\n//           Meteor.call('createSubscription', \"Procedures\", query, {})\n//           return Procedures.find(query);\n//         }      \n//       });\n//     }      \n//   });\n\n//   if(Package['clinical:hl7-resource-questionnaire']){\n//     Meteor.publish(\"Questionnaires\", function (query){\n//       check(query, Match.Maybe(Object))\n//       if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//         if (this.userId) {\n//           Meteor.call('createSubscription', \"Questionnaires\", query, {})\n//           return Questionnaires.find(query);\n//         } else {\n//           Meteor.call('removeSubscription', \"Questionnaires\");\n//           return [];\n//         }  \n//       } else {\n//         Meteor.call('createSubscription', \"Questionnaires\", query, {})\n//         return Questionnaires.find(query);\n//       }      \n//     });\n//   }      \n\n//   if(Package['clinical:hl7-resource-questionnaire-response']){\n//     Meteor.publish(\"QuestionnaireResponses\", function (query){\n//       check(query, Match.Maybe(Object))\n//       if(get(Meteor, 'settings.public.defaults.requireAuthorization')){\n//         if (this.userId) {\n//           Meteor.call('createSubscription', \"QuestionnaireResponses\", query, {})\n//           return QuestionnaireResponses.find(query);\n//         } else {\n//           Meteor.call('removeSubscription', \"QuestionnaireResponses\");\n//           return [];\n//         }  \n//       } else {\n//         Meteor.call('createSubscription', \"QuestionnaireResponses\", query, {})\n//         return QuestionnaireResponses.find(query);\n//       }      \n//     });\n  }); \n\n\n  \n//   if(Package['clinical:hl7-resource-subscription']){\n//     Meteor.publish(\"Subscriptions\", function (query){\n//       check(query, Match.Maybe(Object))\n//       if (this.userId) {\n//         return Subscriptions.find(query);\n//       } else {\n//         return [];\n//       }  \n//     });\n//   }      \n\n}\n\n\n\n","// import { Meteor } from 'meteor/meteor';\n// import { DDPRateLimiter } from 'meteor/ddp-rate-limiter';\n// import { _ } from 'meteor/underscore';\n\n// // // Don't let people write arbitrary data to their 'profile' field from the client\n// // Meteor.users.deny({\n// //   update() {\n// //     return true;\n// //   }\n// // });\n\n// // // Don't let people write arbitrary data to their 'profile' field from the client\n// if(Package['clinical:hl7-resource-patient']){\n//   Patients.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-allergy-intolerance']){\n//   AllergyIntolerances.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-careplan']){\n//   CarePlans.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n//   Goals.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-condition']){\n//   Conditions.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-device']){\n//   Devices.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-diagnostic-report']){\n//   DiagnosticReports.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n\n// if(Package['clinical:hl7-resource-immunization']){\n//   Immunizations.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-list']){\n//   Lists.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n// if(Package['clinical:hl7-resource-location']){\n//   Locations.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-medication']){\n//   Medications.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-medication-order']){\n//   MedicationOrders.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-medication-statement']){\n//   MedicationStatements.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-observation']){\n//   Observations.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-organization']){\n//   Organizations.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-patient']){\n//   Patients.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-practitioner']){\n//   Practitioners.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-procedure']){\n//   Procedures.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });\n// }\n\n// if(Package['clinical:hl7-resource-risk-assessment']){\n//   RiskAssessments.allow({\n//     update() { return true; },\n//     insert() { return true; },\n//     remove() { return true; }\n//   });    \n// }\n\n// // Get a list of all accounts methods by running `Meteor.server.method_handlers` in meteor shell\n// const AUTH_METHODS = [\n//   'login',\n//   'logout',\n//   'logoutOtherClients',\n//   'getNewToken',\n//   'removeOtherTokens',\n//   'configureLoginService',\n//   'changePassword',\n//   'forgotPassword',\n//   'resetPassword',\n//   'verifyEmail',\n//   'createUser',\n//   'ATRemoveService',\n//   'ATCreateUserServer',\n//   'ATResendVerificationEmail',\n// ];\n\n// if (Meteor.isServer) {\n//   // Only allow 2 login attempts per connection per 5 seconds\n//   DDPRateLimiter.addRule({\n//     name(name) {\n//       return _.contains(AUTH_METHODS, name);\n//     },\n\n//     // Rate limit per connection ID\n//     connectionId() { return true; },\n//   }, 2, 5000);\n// }\n\n\n// // Security notifications\n// if(Package['autopublish']){\n//   console.log(\"*****************************************************************************\")\n//   console.log(\"HIPAA WARNING:  DO NOT STORE PROTECTED HEALTH INFORMATION IN THIS APP. \");  \n//   console.log(\"Your application has the 'autopublish' package installed.  Please uninstall.\");\n//   console.log(\"\");  \n//   console.log(\"meteor remove autopublish\");  \n//   console.log(\"meteor add clinical:autopublish\");  \n//   console.log(\"\");  \n// }\n\n","\n\nPublishingHouse = {\n    count: function(){\n        return 10;\n    }\n}\n\nexport default PublishingHouse;"]}