{"version":3,"sources":["meteor://ðŸ’»app/packages/clinical:hl7-resource-procedure-request/lib/hl7-resource-procedure-request.js"],"names":["SimpleSchema","module","link","v","ProcedureRequest","BaseModel","extend","prototype","_collection","ProcedureRequests","Mongo","Collection","_transform","document","Meteor","isClient","subscribe","isServer","publish","argument","userId","find","ProcedureRequestSchema","type","String","defaultValue","attachSchema","exportDefault"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,YAAJ;AAAiBC,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAAA,uBAASC,CAAT,EAAW;AAACH,gBAAY,GAACG,CAAb;AAAe;AAA3B,CAA3B,EAAwD,CAAxD;AAEjB;AACAC,gBAAgB,GAAGC,SAAS,CAACC,MAAV,EAAnB,C,CAGA;;AACAF,gBAAgB,CAACG,SAAjB,CAA2BC,WAA3B,GAAyCC,iBAAzC,C,CAEA;AACA;;AACAA,iBAAiB,GAAG,IAAIC,KAAK,CAACC,UAAV,CAAqB,mBAArB,CAApB,C,CAEA;;AACAF,iBAAiB,CAACG,UAAlB,GAA+B,UAAUC,QAAV,EAAoB;AACjD,SAAO,IAAIT,gBAAJ,CAAqBS,QAArB,CAAP;AACD,CAFD;;AAKA,IAAIC,MAAM,CAACC,QAAX,EAAoB;AAClBD,QAAM,CAACE,SAAP,CAAiB,mBAAjB;AACD;;AAED,IAAIF,MAAM,CAACG,QAAX,EAAoB;AAClBH,QAAM,CAACI,OAAP,CAAe,mBAAf,EAAoC,UAAUC,QAAV,EAAmB;AACrD,QAAI,KAAKC,MAAT,EAAiB;AACf,aAAOX,iBAAiB,CAACY,IAAlB,EAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAP;AACD;AACF,GAND;AAOD;;AAIDC,sBAAsB,GAAG,IAAItB,YAAJ,CAAiB;AACxC,kBAAiB;AACfuB,QAAI,EAAEC,MADS;AAEfC,gBAAY,EAAE;AAFC;AADuB,CAAjB,CAAzB,C,CAUA;AACA;;AAEAhB,iBAAiB,CAACiB,YAAlB,CAA+BJ,sBAA/B;AAhDArB,MAAM,CAAC0B,aAAP,CAsDe;AAAElB,mBAAiB,EAAjBA,iBAAF;AAAqBL,kBAAgB,EAAhBA,gBAArB;AAAuCkB,wBAAsB,EAAtBA;AAAvC,CAtDf,E","file":"/packages/clinical_hl7-resource-procedure-request.js","sourcesContent":["import SimpleSchema from 'simpl-schema';\n\n// create the object using our BaseModel\nProcedureRequest = BaseModel.extend();\n\n\n//Assign a collection so the object knows how to perform CRUD operations\nProcedureRequest.prototype._collection = ProcedureRequests;\n\n// Create a persistent data store for addresses to be stored.\n// HL7.Resources.Patients = new Mongo.Collection('HL7.Resources.Patients');\nProcedureRequests = new Mongo.Collection('ProcedureRequests');\n\n//Add the transform to the collection since Meteor.users is pre-defined by the accounts package\nProcedureRequests._transform = function (document) {\n  return new ProcedureRequest(document);\n};\n\n\nif (Meteor.isClient){\n  Meteor.subscribe(\"ProcedureRequests\");\n}\n\nif (Meteor.isServer){\n  Meteor.publish(\"ProcedureRequests\", function (argument){\n    if (this.userId) {\n      return ProcedureRequests.find();\n    } else {\n      return [];\n    }\n  });\n}\n\n\n\nProcedureRequestSchema = new SimpleSchema({\n  \"resourceType\" : {\n    type: String,\n    defaultValue: \"ProcedureRequest\"\n  },\n  \n\n});\n\n\n// BaseSchema.extend(ProcedureSchema);\n// DomainResourceSchema.extend(ProcedureSchema);\n\nProcedureRequests.attachSchema(ProcedureRequestSchema);\n\n\n\n\n\nexport default { ProcedureRequests, ProcedureRequest, ProcedureRequestSchema };"]}