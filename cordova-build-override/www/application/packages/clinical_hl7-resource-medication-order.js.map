{"version":3,"sources":["meteor://ðŸ’»app/packages/clinical:hl7-resource-medication-order/lib/MedicationOrders.js","meteor://ðŸ’»app/packages/clinical:hl7-resource-medication-order/index.jsx","meteor://ðŸ’»app/packages/clinical:hl7-resource-medication-order/client/MedicationOrderDetail.js","meteor://ðŸ’»app/packages/clinical:hl7-resource-medication-order/client/MedicationOrdersPage.js","meteor://ðŸ’»app/packages/clinical:hl7-resource-medication-order/client/MedicationOrdersTable.js"],"names":["SimpleSchema","module","link","v","MedicationOrder","BaseModel","extend","prototype","_collection","MedicationOrders","Package","Mongo","Collection","connection","_transform","document","MedicationOrderSchema","type","String","defaultValue","optional","Array","IdentifierSchema","Date","CodeableConceptSchema","ReferenceSchema","Object","TimingSchema","Boolean","RangeSchema","QuantitySchema","RatioSchema","PeriodSchema","Number","BaseSchema","DomainResourceSchema","attachSchema","exportDefault","export","SidebarElements","DynamicRoutes","MedicationOrdersPage","MedicationOrdersTable","MedicationOrderDetail","CardActions","CardText","Bert","RaisedButton","React","ReactMeteorData","ReactMixin","TextField","PropTypes","defaultMedicationOrder","Session","setDefault","getMeteorData","data","medicationOrderId","medicationOrder","get","console","log","selectedMedicationOrder","findOne","_id","render","props","id","determineButtons","handleSaveButton","bind","marginRight","handleDeleteButton","changeState","field","event","value","medicationOrderUpdate","process","env","NODE_ENV","patient","display","asserter","clinicalStatus","code","coding","evidence","detail","set","resourceType","update","$set","error","result","alert","reason","HipaaLogger","logEvent","eventType","userId","Meteor","userName","user","fullName","collectionName","recordId","insert","handleCancelButton","remove","Component","propTypes","hasUser","object","CardTitle","Tab","Tabs","GlassCard","VerticalCanvas","Glass","style","opacity","tab","borderBottom","borderRight","state","isLoggedIn","tabIndex","medicationOrderSearchFilter","currentMedicationOrder","blur","appbar","darkroom","handleTabChange","index","onNewTab","handleActive","Card","CardMedia","Table","moment","flattenMedicationOrder","newRow","status","identifier","patientDisplay","prescriberDisplay","asserterDisplay","snomedCode","snomedDisplay","evidenceDisplay","barcode","dateWritten","dosageInstructionText","format","selected","medicationOrders","forEach","order","push","find","map","displayOnMobile","width","includes","window","navigator","platform","rowClick","tableRows","i","length","cursor","minWidth"],"mappings":"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","file":"/packages/clinical_hl7-resource-medication-order.js","sourcesContent":["import SimpleSchema from 'simpl-schema';\n\n// create the object using our BaseModel\nMedicationOrder = BaseModel.extend();\n\n\n//Assign a collection so the object knows how to perform CRUD operations\nMedicationOrder.prototype._collection = MedicationOrders;\n\n// // Create a persistent data store for addresses to be stored.\n// // HL7.Resources.Patients = new Mongo.Collection('HL7.Resources.Patients');\n\nif(typeof MedicationOrders === 'undefined'){\n  if(Package['clinical:autopublish']){\n    MedicationOrders = new Mongo.Collection('MedicationOrders');\n  } else if(Package['clinical:desktop-publish']){    \n    MedicationOrders = new Mongo.Collection('MedicationOrders');\n  } else {\n    MedicationOrders = new Mongo.Collection('MedicationOrders', {connection: null});\n  }\n}\n\n//Add the transform to the collection since Meteor.users is pre-defined by the accounts package\nMedicationOrders._transform = function (document) {\n  return new MedicationOrder(document);\n};\n\n\nMedicationOrderSchema = new SimpleSchema({\n  \"resourceType\" : {\n    type: String,\n    defaultValue: \"MedicationOrder\"\n  },\n  \"identifier\" : {\n    optional: true,\n    type:  Array\n    },\n  \"identifier.$\" : {\n    optional: true,\n    type:  IdentifierSchema \n    },\n  \"dateWritten\" : {\n    optional: true,\n    type: Date\n  },\n  \"status\" : {\n    optional: true,\n    type: String\n  },\n  \"dateEnded\" : {\n    optional: true,\n    type: Date\n  },\n  \"reasonEnded\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n  \"patient\" : {\n    optional: true,\n    type: ReferenceSchema\n  },\n  \"prescriber\" : {\n    optional: true,\n    type: ReferenceSchema\n  },\n  \"encounter\" : {\n    optional: true,\n    type: ReferenceSchema\n  },\n\n  \"reasonCodeableConceptSchema\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n  \"reasonReferenceSchema\" : {\n    optional: true,\n    type: ReferenceSchema\n  },\n  \"note\" : {\n    optional: true,\n    type: String\n  },\n\n  \"medicationCodeableConceptSchema\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n  \"medicationReferenceSchema\" : {\n    optional: true,\n    type: ReferenceSchema\n  },\n\n  \"dosageInstruction\" : {\n    optional: true,\n    type: Array\n  },\n  \"dosageInstruction.$\" : {\n    optional: true,\n    type: Object\n  },  \n  \"dosageInstruction.$.text\" : {\n    optional: true,\n    type: String\n  },\n  \"dosageInstruction.$.additionalInstructions\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n  \"dosageInstruction.$.timing\" : {\n    optional: true,\n    type: TimingSchema\n  },\n\n  \"dosageInstruction.$.asNeededBoolean\" : {\n    optional: true,\n    type: Boolean\n  },\n  \"dosageInstruction.$.asNeededCodeableConceptSchema\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n\n  \"dosageInstruction.$.siteCodeableConceptSchema\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n  \"dosageInstruction.$.siteReferenceSchema\" : {\n    optional: true,\n    type: ReferenceSchema\n  },\n  \"dosageInstruction.$.route\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n  \"dosageInstruction.$.method\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n\n  \"dosageInstruction.$.doseRange\" : {\n    optional: true,\n    type: RangeSchema\n  },\n  \"dosageInstruction.$.doseQuantity\" : {\n    optional: true,\n    type: QuantitySchema\n  },\n\n  \"dosageInstruction.$.rateRatio\" : {\n    optional: true,\n    type: RatioSchema\n  },\n  \"dosageInstruction.$.rateRange\" : {\n    optional: true,\n    type: RangeSchema\n  },\n  \"dosageInstruction.$.maxDosePerPeriodSchema\" : {\n    optional: true,\n    type: RatioSchema\n  },\n\n  \"dispenseRequest\" : {\n    optional: true,\n    type: Object\n    },\n\n  \"dispenseRequest.medicationCodeableConceptSchema\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n  \"dispenseRequest.medicationReferenceSchema\" : {\n    optional: true,\n    type: ReferenceSchema\n  },\n  \"dispenseRequest.validityPeriodSchema\" : {\n    optional: true,\n    type: PeriodSchema\n  },\n  \"dispenseRequest.numberOfRepeatsAllowed\" : {\n    optional: true,\n    type: Number\n  },\n  \"dispenseRequest.quantity\" : {\n    optional: true,\n    type: QuantitySchema\n  },\n  \"dispenseRequest.expectedSupplyDuration\" : {\n    optional: true,\n    type: QuantitySchema\n  },\n\n  \"substitution\" : {\n    optional: true,\n    type:  Array\n    },\n  \"substitution.$\" : {\n    optional: true,\n    type:  IdentifierSchema \n    },\n  \"substitution.type\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n  \"substitution.reason\" : {\n    optional: true,\n    type: CodeableConceptSchema\n  },\n  \"priorPrescription\" : {\n    optional: true,\n    type: ReferenceSchema\n  }\n});\n\nBaseSchema.extend(MedicationOrderSchema);\nDomainResourceSchema.extend(MedicationOrderSchema);\nMedicationOrders.attachSchema(MedicationOrderSchema);\n\nexport default { MedicationOrder, MedicationOrders, MedicationOrderSchema };","\n\nimport MedicationOrdersPage from './client/MedicationOrdersPage';\nimport MedicationOrdersTable from './client/MedicationOrdersTable';\nimport { MedicationOrder, MedicationOrders, MedicationOrderSchema } from './lib/MedicationOrders';\n\nvar DynamicRoutes = [{\n  'name': 'MedicationOrdersPage',\n  'path': '/medication-orders',\n  'component': MedicationOrdersPage,\n  'requireAuth': true\n}];\n\nvar SidebarElements = [{\n  'primaryText': 'Medication Orders',\n  'to': '/medication-orders',\n  'href': '/medication-orders'\n}];\n\nexport { \n  SidebarElements, \n  DynamicRoutes, \n\n  MedicationOrdersPage,\n  MedicationOrdersTable\n};\n\n\n","import { CardActions, CardText } from 'material-ui/Card';\n\nimport { Bert } from 'meteor/clinical:alert';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport React from 'react';\nimport { ReactMeteorData } from 'meteor/react-meteor-data';\nimport ReactMixin from 'react-mixin';\nimport TextField from 'material-ui/TextField';\nimport PropTypes from 'prop-types';\n\nlet defaultMedicationOrder = {\n  \"resourceType\": \"MedicationOrder\",\n  \"patient\": {\n    \"reference\": \"\",\n    \"display\": \"\"\n  },\n  \"asserter\": {\n    \"reference\": \"\",\n    \"display\": \"\"\n  },\n  \"dateRecorded\": \"\",\n  \"code\": {\n    \"coding\": [\n      {\n        \"system\": \"http://snomed.info/sct\",\n        \"code\": \"\",\n        \"display\": \"\"\n      }\n    ]\n  },\n  \"clinicalStatus\": \"\",\n  \"verificationStatus\": \"confirmed\",\n  \"severity\": {\n    \"coding\": [\n      {\n        \"system\": \"http://snomed.info/sct\",\n        \"code\": \"\",\n        \"display\": \"\"\n      }\n    ]\n  },\n  \"onsetDateTime\": \"\",\n  \"evidence\": [\n    {\n      \"detail\": [\n        {\n          \"reference\": \"\",\n          \"display\": \"\"\n        }\n      ]\n    }\n  ]\n};\n\n\n\nSession.setDefault('medicationOrderUpsert', false);\nSession.setDefault('selectedMedicationOrder', false);\n\n\nexport default class MedicationOrderDetail extends React.Component {\n  getMeteorData() {\n    let data = {\n      medicationOrderId: false,\n      medicationOrder: defaultMedicationOrder\n    };\n\n    if (Session.get('medicationOrderUpsert')) {\n      data.medicationOrder = Session.get('medicationOrderUpsert');\n    } else {\n      if (Session.get('selectedMedicationOrder')) {\n        data.medicationOrderId = Session.get('selectedMedicationOrder');\n        console.log(\"selectedMedicationOrder\", Session.get('selectedMedicationOrder'));\n\n        let selectedMedicationOrder = MedicationOrders.findOne({_id: Session.get('selectedMedicationOrder')});\n        console.log(\"selectedMedicationOrder\", selectedMedicationOrder);\n\n        if (selectedMedicationOrder) {\n          data.medicationOrder = selectedMedicationOrder;\n        }\n      } else {\n        data.medicationOrder = defaultMedicationOrder;\n      }\n\n    }\n\n    return data;\n  }\n\n  render() {\n    return (\n      <div id={this.props.id} className=\"medicationOrderDetail\">\n        <CardText>\n          {/* <TextField\n            id='patientDisplayInput'\n            ref='patientDisplay'\n            name='patientDisplay'\n            floatingLabelText='Patient'\n            value={this.data.medicationOrder.patient ? this.data.medicationOrder.patient.display : ''}\n            onChange={ this.changeState.bind(this, 'patientDisplay')}\n            fullWidth\n            /><br/>\n          <TextField\n            id='asserterDisplayInput'\n            ref='asserterDisplay'\n            name='asserterDisplay'\n            floatingLabelText='Asserter'\n            value={this.data.medicationOrder.asserter ? this.data.medicationOrder.asserter.display : ''}\n            onChange={ this.changeState.bind(this, 'asserterDisplay')}\n            fullWidth\n            /><br/>\n          <TextField\n            id='clinicalStatusInput'\n            ref='clinicalStatus'\n            name='clinicalStatus'\n            floatingLabelText='Clinical Status'\n            value={this.data.medicationOrder.clinicalStatus ? this.data.medicationOrder.clinicalStatus : ''}\n            onChange={ this.changeState.bind(this, 'clinicalStatus')}\n            fullWidth\n            /><br/>\n          <TextField\n            id='snomedCodeInput'\n            ref='snomedCode'\n            name='snomedCode'\n            floatingLabelText='SNOMED Code'\n            value={this.data.medicationOrder.code.coding[0] ? this.data.medicationOrder.code.coding[0].code : ''}\n            onChange={ this.changeState.bind(this, 'snomedCode')}\n            fullWidth\n            /><br/>\n          <TextField\n            id='snomedDisplayInput'\n            ref='snomedDisplay'\n            name='snomedDisplay'\n            floatingLabelText='SNOMED Display'\n            value={this.data.medicationOrder.code.coding[0] ? this.data.medicationOrder.code.coding[0].display : ''}\n            onChange={ this.changeState.bind(this, 'snomedDisplay')}\n            fullWidth\n            /><br/>\n          <TextField\n            id='evidenceDisplayInput'\n            ref='evidenceDisplay'\n            name='evidenceDisplay'\n            floatingLabelText='Evidence (Observation)'\n            value={this.data.medicationOrder.evidence[0].detail[0] ? this.data.medicationOrder.evidence[0].detail[0].display : ''}\n            onChange={ this.changeState.bind(this, 'evidenceDisplay')}\n            fullWidth\n            /><br/> */}\n\n\n\n\n        </CardText>\n        <CardActions>\n          { this.determineButtons(this.data.medicationOrderId) }\n        </CardActions>\n      </div>\n    );\n  }\n\n\n  determineButtons(medicationOrderId){\n    if (medicationOrderId) {\n      return (\n        <div>\n          <RaisedButton id=\"saveMedicationOrderButton\" label=\"Save\" primary={true} onClick={this.handleSaveButton.bind(this)} style={{marginRight: '20px'}}  />\n          <RaisedButton id=\"deleteMedicationOrderButton\" label=\"Delete\" onClick={this.handleDeleteButton.bind(this)} />\n        </div>\n      );\n    } else {\n      return(\n        <RaisedButton id=\"saveMedicationOrderButton\" label=\"Save\" primary={true} onClick={this.handleSaveButton.bind(this)} />\n      );\n    }\n  }\n\n\n\n  // this could be a mixin\n  changeState(field, event, value){\n    let medicationOrderUpdate;\n\n    if(process.env.NODE_ENV === \"test\") console.log(\"MedicationOrderDetail.changeState\", field, event, value);\n\n    // by default, assume there's no other data and we're creating a new medicationOrder\n    if (Session.get('medicationOrderUpsert')) {\n      medicationOrderUpdate = Session.get('medicationOrderUpsert');\n    } else {\n      medicationOrderUpdate = defaultMedicationOrder;\n    }\n\n\n\n    // if there's an existing medicationOrder, use them\n    if (Session.get('selectedMedicationOrder')) {\n      medicationOrderUpdate = this.data.medicationOrder;\n    }\n\n    switch (field) {\n      case \"patientDisplay\":\n        medicationOrderUpdate.patient.display = value;\n        break;\n      case \"asserterDisplay\":\n        medicationOrderUpdate.asserter.display = value;\n        break;\n      case \"clinicalStatus\":\n        medicationOrderUpdate.clinicalStatus = value;\n        break;\n      case \"snomedCode\":\n        medicationOrderUpdate.code.coding[0].code = value;\n        break;\n      case \"snomedDisplay\":\n        medicationOrderUpdate.code.coding[0].display = value;\n        break;\n      case \"evidenceDisplay\":\n        medicationOrderUpdate.evidence[0].detail[0].display = value;\n        break;\n      default:\n\n    }\n\n    if(process.env.NODE_ENV === \"test\") console.log(\"medicationOrderUpdate\", medicationOrderUpdate);\n    Session.set('medicationOrderUpsert', medicationOrderUpdate);\n  }\n\n  handleSaveButton(){\n    let medicationOrderUpdate = Session.get('medicationOrderUpsert', medicationOrderUpdate);\n\n    if(process.env.NODE_ENV === \"test\") console.log(\"medicationOrderUpdate\", medicationOrderUpdate);\n\n\n    if (Session.get('selectedMedicationOrder')) {\n      if(process.env.NODE_ENV === \"test\") console.log(\"Updating medicationOrder...\");\n      delete medicationOrderUpdate._id;\n\n      // not sure why we're having to respecify this; fix for a bug elsewhere\n      medicationOrderUpdate.resourceType = 'MedicationOrder';\n\n      MedicationOrders.update(\n        {_id: Session.get('selectedMedicationOrder')}, {$set: medicationOrderUpdate }, function(error, result) {\n          if (error) {\n            console.log(\"error\", error);\n\n            Bert.alert(error.reason, 'danger');\n          }\n          if (result) {\n            HipaaLogger.logEvent({eventType: \"update\", userId: Meteor.userId(), userName: Meteor.user().fullName(), collectionName: \"MedicationOrders\", recordId: Session.get('selectedMedicationOrder')});\n            Session.set('medicationOrderPageTabIndex', 1);\n            Session.set('selectedMedicationOrder', false);\n            Session.set('medicationOrderUpsert', false);\n            Bert.alert('MedicationOrder updated!', 'success');\n          }\n        });\n    } else {\n\n      if(process.env.NODE_ENV === \"test\") console.log(\"create a new medicationOrder\", medicationOrderUpdate);\n\n      MedicationOrders.insert(medicationOrderUpdate, function(error, result) {\n        if (error) {\n          console.log(\"error\", error);\n          Bert.alert(error.reason, 'danger');\n        }\n        if (result) {\n          HipaaLogger.logEvent({eventType: \"create\", userId: Meteor.userId(), userName: Meteor.user().fullName(), collectionName: \"MedicationOrders\", recordId: result});\n          Session.set('medicationOrderPageTabIndex', 1);\n          Session.set('selectedMedicationOrder', false);\n          Session.set('medicationOrderUpsert', false);\n          Bert.alert('MedicationOrder added!', 'success');\n        }\n      });\n    }\n  }\n\n  handleCancelButton(){\n    Session.set('medicationOrderPageTabIndex', 1);\n  }\n\n  handleDeleteButton(){\n    MedicationOrder.remove({_id: Session.get('selectedMedicationOrder')}, function(error, result){\n      if (error) {\n        Bert.alert(error.reason, 'danger');\n      }\n      if (result) {\n        HipaaLogger.logEvent({eventType: \"delete\", userId: Meteor.userId(), userName: Meteor.user().fullName(), collectionName: \"MedicationOrders\", recordId: Session.get('selectedMedicationOrder')});\n        Session.set('medicationOrderPageTabIndex', 1);\n        Session.set('selectedMedicationOrder', false);\n        Session.set('medicationOrderUpsert', false);\n        Bert.alert('MedicationOrder removed!', 'success');\n      }\n    });\n  }\n}\n\n\nMedicationOrderDetail.propTypes = {\n  hasUser: PropTypes.object\n};\nReactMixin(MedicationOrderDetail.prototype, ReactMeteorData);\n","import { CardText, CardTitle } from 'material-ui/Card';\nimport {Tab, Tabs} from 'material-ui/Tabs';\nimport { GlassCard, VerticalCanvas, Glass } from 'meteor/clinical:glass-ui';\n\nimport MedicationOrderDetail from './MedicationOrderDetail';\nimport MedicationOrdersTable from './MedicationOrdersTable';\nimport { Meteor } from 'meteor/meteor';\nimport { Session } from 'meteor/session';\nimport React  from 'react';\nimport { ReactMeteorData } from 'meteor/react-meteor-data';\nimport ReactMixin  from 'react-mixin';\n\nexport class MedicationOrdersPage extends React.Component {\n  getMeteorData() {\n    let data = {\n      style: {\n        opacity: Session.get('globalOpacity'),\n        tab: {\n          borderBottom: '1px solid lightgray',\n          borderRight: 'none'\n        }\n      },\n      state: {\n        isLoggedIn: false\n      },\n      tabIndex: Session.get('medicationOrderPageTabIndex'),\n      medicationOrderSearchFilter: Session.get('medicationOrderSearchFilter'),\n      currentMedicationOrder: Session.get('selectedMedicationOrder')\n    };\n\n    if (Meteor.user()) {\n      data.state.isLoggedIn = true;\n    }\n\n    data.style = Glass.blur(data.style);\n    data.style.appbar = Glass.darkroom(data.style.appbar);\n    data.style.tab = Glass.darkroom(data.style.tab);\n\n    return data;\n  }\n\n  handleTabChange(index){\n    Session.set('medicationOrderPageTabIndex', index);\n  }\n\n  onNewTab(){\n    Session.set('selectedMedicationOrder', false);\n    Session.set('medicationOrderUpsert', false);\n  }\n\n  render() {\n    if(process.env.NODE_ENV === \"test\") console.log('In MedicationOrdersPage render');\n    return (\n      <div id='medicationOrdersPage'>\n        <VerticalCanvas>\n          <GlassCard height='auto'>\n            <CardTitle title='MedicationOrders' />\n            <CardText>\n              <Tabs id=\"medicationOrdersPageTabs\" default value={this.data.tabIndex} onChange={this.handleTabChange} initialSelectedIndex={1}>\n               <Tab className='newMedicationOrderTab' label='New' style={this.data.style.tab} onActive={ this.onNewTab } value={0}>\n                 <MedicationOrderDetail id='newMedicationOrder' />\n               </Tab>\n               <Tab className=\"medicationOrderListTab\" label='MedicationOrders' onActive={this.handleActive} style={this.data.style.tab} value={1}>\n                <MedicationOrdersTable />\n               </Tab>\n               <Tab className=\"medicationOrderDetailsTab\" label='Detail' onActive={this.handleActive} style={this.data.style.tab} value={2}>\n                 <MedicationOrderDetail id='medicationOrderDetails' />\n               </Tab>\n             </Tabs>\n            </CardText>\n          </GlassCard>\n        </VerticalCanvas>\n      </div>\n    );\n  }\n}\n\nReactMixin(MedicationOrdersPage.prototype, ReactMeteorData);\n\nexport default MedicationOrdersPage;","import { Card, CardActions, CardMedia, CardText, CardTitle } from 'material-ui/Card';\n\nimport React from 'react';\nimport { ReactMeteorData } from 'meteor/react-meteor-data';\nimport ReactMixin from 'react-mixin';\nimport { Table } from 'react-bootstrap';\nimport { get } from 'lodash';\nimport { moment } from 'meteor/momentjs:moment';\n\nflattenMedicationOrder = function(medicationOrder){\n  console.log('flattenMedicationOrder', medicationOrder)\n\n  let newRow = {\n    _id: medicationOrder._id,\n    status: '',\n    identifier: '',\n    patientDisplay: '',\n    prescriberDisplay: '',\n    asserterDisplay: '',\n    clinicalStatus: '',\n    snomedCode: '',\n    snomedDisplay: '',\n    evidenceDisplay: '',\n    barcode: '',\n    dateWritten: '',\n    dosageInstructionText: ''\n  };\n\n  newRow.status = get(medicationOrder, 'status');\n  newRow.identifier = get(medicationOrder, 'identifier[0].value');\n  newRow.patientDisplay = get(medicationOrder, 'patient.display');\n  newRow.prescriberDisplay = get(medicationOrder, 'prescriber.display');\n  newRow.dateWritten = moment(get(medicationOrder, 'dateWritten')).format(\"YYYY-MM-DD\");\n  newRow.dosageInstructionText = get(medicationOrder, 'dosageInstruction[0].text');\n  // newRow.asserterDisplay = get(medicationOrder, 'asserter.display');\n  // newRow.clinicalStatus = get(medicationOrder, 'clinicalStatus');\n  // newRow.snomedCode = get(medicationOrder, 'code.coding[0].code');\n  // newRow.snomedDisplay = get(medicationOrder, 'code.coding[0].display');\n  // newRow.evidenceDisplay = get(medicationOrder, 'evidence[0].detail[0].display');\n  newRow.barcode = get(medicationOrder, '_id');\n\n  return newRow;\n}\n\nexport default class MedicationOrdersTable extends React.Component {\n\n  getMeteorData() {\n\n    // this should all be handled by props\n    // or a mixin!\n    let data = {\n      style: {\n        opacity: Session.get('globalOpacity')\n      },\n      selected: [],\n      medicationOrders: []\n    }\n    \n    if(this.props.data){\n      console.log('this.props.data', this.props.data)\n      this.props.data.forEach(function(order){\n        console.log('order', order)\n        data.medicationOrders.push(flattenMedicationOrder(order));\n      })\n    } else {\n      data.medicationOrders = MedicationOrders.find().map(flattenMedicationOrder);\n    }\n\n    if(process.env.NODE_ENV === \"test\") console.log(\"MedicationOrdersTable.data\", data);\n    return data;\n  };\n  displayOnMobile(width){\n    let style = {};\n    if(['iPhone'].includes(window.navigator.platform)){\n      style.display = \"none\";\n    }\n    if(width){\n      style.width = width;\n    }\n    return style;\n  }\n\n  rowClick(id){\n    Session.set('medicationOrdersUpsert', false);\n    Session.set('selectedMedicationOrder', id);\n    Session.set('medicationOrderPageTabIndex', 2);\n  };\n  render () {\n    let tableRows = [];\n    for (var i = 0; i < this.data.medicationOrders.length; i++) {\n      var newRow = this.data.medicationOrders[i];\n\n      tableRows.push(\n        <tr key={i} className=\"medicationOrderRow\" style={{cursor: \"pointer\"}} onClick={ this.rowClick.bind('this', this.data.medicationOrders[i]._id)} >\n\n          <td className='identifier' style={ this.displayOnMobile()} >{ newRow.identifier }</td>\n          <td className='status' style={ this.displayOnMobile()}>{ newRow.status }</td>\n          <td className='patientDisplay' style={ this.displayOnMobile('140px')} >{ newRow.patientDisplay }</td>\n          <td className='prescriberDisplay' style={{minWidth: '200px'}}>{ newRow.prescriberDisplay }</td>\n          <td className='dateWritten'>{ newRow.dateWritten }</td>\n          <td className='dosageInstructionText'>{ newRow.dosageInstructionText }</td>\n          {/* <td><span className=\"barcode\">{ newRow.barcode }</span></td> */}\n        </tr>\n      )\n    }\n\n    return(\n      <Table id='medicationOrdersTable' hover >\n        <thead>\n          <tr>\n            <th className='identifier' style={ this.displayOnMobile()} >identifier</th>\n            <th className='status' style={ this.displayOnMobile()} >status</th>\n            <th className='patientDisplay' style={ this.displayOnMobile('140px')} >patient</th>\n            <th className='prescriberDisplay' style={{minWidth: '200px'}}>prescriber</th>\n            <th className='dateWritten'>date written</th>\n            <th className='dosageInstructionText'>dosage</th>\n            {/* <th>_id</th> */}\n          </tr>\n        </thead>\n        <tbody>\n          { tableRows }\n        </tbody>\n      </Table>\n    );\n  }\n}\n\n\nReactMixin(MedicationOrdersTable.prototype, ReactMeteorData);\n"]}