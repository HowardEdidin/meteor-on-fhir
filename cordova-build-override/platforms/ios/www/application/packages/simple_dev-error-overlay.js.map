{"version":3,"sources":["meteor://ðŸ’»app/packages/simple:dev-error-overlay/dev-error-overlay.js"],"names":["overlay","notification","errorPage","loadedConfig","loadConfig","soundURL","alertSound","Audio","setInterval","checkErrorState","Tracker","autorun","Meteor","status","connected","HTTP","get","err","res","isMeteorApp","content","indexOf","startErrorReport","runAlerts","refreshErrorReport","stopErrorReport","document","createElement","className","innerHTML","body","appendChild","playSoundCheckbox","getElementById","showNotifCheckbox","forEach","checkbox","configKey","dataset","config","checked","onchange","setConfig","play","iframe","src","removeChild","reconnect","close","showNotif","notifyError","playSound","message","createNotification","options","tag","window","location","host","Notification","onclick","focus","alert","permission","requestPermission","localStorage","simpleDevErrorOverlayConfig","JSON","parse","e","stringify"],"mappings":"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","file":"/packages/simple_dev-error-overlay.js","sourcesContent":["// The overlay DOM element\nlet overlay = null;\n// The HTML5 notification object\nlet notification = null;\n// The content of the overlay iframe\nlet errorPage = null;\n\nconst loadedConfig = loadConfig();\nconst soundURL = '/packages/simple_dev-error-overlay/assets/negative_beeps.mp3';\nconst alertSound = new Audio(soundURL);\n\n// Poll the server for error\nsetInterval(checkErrorState, 500);\n\n// In development mode a DDP/Websocket disconnection is likely a sign of a\n// broken server. In this case we re-check the error state immediately instead\n// of waiting on average 250ms (worst case 500ms).\nTracker.autorun(() => {\n  if (! Meteor.status().connected) {\n    checkErrorState();\n  }\n});\n\nfunction checkErrorState() {\n  HTTP.get('/', (err, res) => {\n    // Don't ring the alert in case of a server disconnection. We only want to\n    // alert the developer in case there is a server-side exception breaking the\n    // app. If the server is not responding we assume that the developer stopped\n    // it on purpose (for instance to test offline mode) and we won't do\n    // anything.\n    if (err) {\n      return;\n    }\n\n    const isMeteorApp = res.content.indexOf('__meteor_runtime_config__') !== -1;\n\n    if (!overlay && !isMeteorApp) {\n      startErrorReport();\n      runAlerts();\n    } else if (overlay && !isMeteorApp && errorPage !== res.content) {\n      refreshErrorReport();\n      runAlerts();\n    } else if (overlay && isMeteorApp) {\n      stopErrorReport();\n    }\n    errorPage = res.content;\n  });\n}\n\nfunction startErrorReport() {\n  overlay = document.createElement('div');\n  overlay.className = 'simple-dev-error-overlay';\n\n  // Templating! woo. reduce dependencies by not using React, Blaze, or Angular\n  overlay.innerHTML = `\n    <div class=\"simple-dev-error-window\">\n      <div class=\"simple-dev-error-controls\">\n        <strong>simple:dev-error-overlay</strong>\n        &nbsp;|&nbsp;\n        <label>\n          <input type=\"checkbox\" id=\"simple-dev-error-play-sound\" data-config=\"playSound\" />\n          Play sound\n        </label>\n        &nbsp;\n        <label>\n          <input type=\"checkbox\" id=\"simple-dev-error-show-notif\" data-config=\"showNotif\" />\n          Show notification\n        </label>\n        &nbsp;|&nbsp;\n        Settings stored in localStorage.\n      </div>\n      <div class=\"simple-dev-error-iframe-wrapper\">\n        <iframe src=\"/\" id=\"simple-dev-error-iframe\"></iframe>\n      </div>\n    </div>\n  `;\n\n  document.body.appendChild(overlay);\n\n  const playSoundCheckbox = document.getElementById('simple-dev-error-play-sound');\n  const showNotifCheckbox = document.getElementById('simple-dev-error-show-notif');\n\n  [playSoundCheckbox, showNotifCheckbox].forEach((checkbox) => {\n    const configKey = checkbox.dataset.config;\n\n    if (loadedConfig[configKey]) {\n      checkbox.checked = true;\n    }\n\n    checkbox.onchange = () => {\n      // Edit the config\n      loadedConfig[configKey] = checkbox.checked;\n      setConfig(loadedConfig);\n\n      // If the sound notification was activated, play the sound as a discovery\n      // mechanism.\n      if (configKey === 'playSound' && checkbox.checked) {\n        alertSound.play();\n      }\n    }\n  });\n}\n\n// If we are already reporting an error in the overlay, and we have detected\n// a new error on the server, we need refresh the iframe.\nfunction refreshErrorReport() {\n  const iframe = document.getElementById('simple-dev-error-iframe');;\n  iframe.src = iframe.src;\n}\n\nfunction stopErrorReport() {\n  if (overlay) {\n    document.body.removeChild(overlay);\n    overlay = null;\n    errorPage = null;\n    Meteor.reconnect();\n  }\n\n  if (notification) {\n    notification.close();\n    notification = null;\n  }\n}\n\nfunction runAlerts() {\n  if (loadedConfig.showNotif) {\n    notifyError('Build error in your app!');\n  }\n\n  if (loadedConfig.playSound) {\n    alertSound.play();\n  }\n}\n\n// Mostly lifted from https://developer.mozilla.org/en-US/docs/Web/API/notification\nfunction notifyError(message) {\n  if (notification) {\n    // Already displaying a notification\n    return;\n  }\n\n  const createNotification = () => {\n    const options = {\n      body: 'From simple:dev-error-overlay',\n\n      // Prevents notification from showing twice for the same app if you have\n      // multiple tabs open\n      tag: window.location.host + 'simple:dev-error-overlay'\n    };\n\n    notification = new Notification(message, options);\n    notification.onclick = () => {\n      window.focus();\n    };\n  };\n\n\n  // Let's check if the browser supports notifications\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n\n  // Let's check whether notification permissions have already been granted\n  else if (Notification.permission === \"granted\") {\n    // If it's okay let's create a notification\n    createNotification();\n  }\n\n  // Otherwise, we need to ask the user for permission\n  else if (Notification.permission !== 'denied') {\n    Notification.requestPermission(function (permission) {\n      // If the user accepts, let's create a notification\n      if (permission === \"granted\") {\n        createNotification();\n      }\n    });\n  }\n\n  // At last, if the user has denied notifications, and you\n  // want to be respectful there is no need to bother them any more.\n}\n\nfunction loadConfig() {\n  let config = localStorage.simpleDevErrorOverlayConfig;\n\n  if (! config) {\n    config = {\n      playSound: false,\n      showNotif: false\n    };\n  } else {\n    try {\n      config = JSON.parse(config);\n    } catch (e) {\n      // Malformed JSON there, fix it!\n      config = {\n        playSound: false,\n        showNotif: false\n      };\n      localStorage.simpleDevErrorOverlayConfig = JSON.stringify(config);\n    }\n  }\n\n  return config;\n}\n\nfunction setConfig(config) {\n  localStorage.simpleDevErrorOverlayConfig = JSON.stringify(config);\n}\n"]}