{"version":3,"sources":["meteor://ðŸ’»app/packages/clinical:hl7-resource-binary/lib/hl7-resource-binary.js"],"names":["SimpleSchema","module","link","v","Binary","BaseModel","extend","prototype","_collection","Binarys","Mongo","Collection","_transform","document","BinarySchema","type","String","defaultValue","optional","Object","blackbox","BaseSchema","DomainResourceSchema","attachSchema","exportDefault"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,YAAJ;AAAiBC,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAAA,uBAASC,CAAT,EAAW;AAACH,gBAAY,GAACG,CAAb;AAAe;AAA3B,CAA3B,EAAwD,CAAxD;AAEjB;AACAC,MAAM,GAAGC,SAAS,CAACC,MAAV,EAAT,C,CAGA;;AACAF,MAAM,CAACG,SAAP,CAAiBC,WAAjB,GAA+BC,OAA/B,C,CAEA;AACA;;AACAA,OAAO,GAAG,IAAIC,KAAK,CAACC,UAAV,CAAqB,SAArB,CAAV,C,CAEA;;AACAF,OAAO,CAACG,UAAR,GAAqB,UAAUC,QAAV,EAAoB;AACvC,SAAO,IAAIT,MAAJ,CAAWS,QAAX,CAAP;AACD,CAFD,C,CAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,YAAY,GAAG,IAAId,YAAJ,CAAiB;AAC9B,kBAAiB;AACfe,QAAI,EAAEC,MADS;AAEfC,gBAAY,EAAE;AAFC,GADa;AAK9B,iBAAgB;AACdC,YAAQ,EAAE,IADI;AAEdH,QAAI,EAAEC;AAFQ,GALc;AAS9B,aAAY;AACVD,QAAI,EAAEI,MADI;AAEVD,YAAQ,EAAE,IAFA;AAGVE,YAAQ,EAAE;AAHA;AATkB,CAAjB,CAAf;AAeAC,UAAU,CAACf,MAAX,CAAkBQ,YAAlB;AACAQ,oBAAoB,CAAChB,MAArB,CAA4BQ,YAA5B;AACAL,OAAO,CAACc,YAAR,CAAqBT,YAArB;AAlDAb,MAAM,CAACuB,aAAP,CAoDe;AAAEpB,QAAM,EAANA,MAAF;AAAUK,SAAO,EAAPA,OAAV;AAAmBK,cAAY,EAAZA;AAAnB,CApDf,E","file":"/packages/clinical_hl7-resource-binary.js","sourcesContent":["import SimpleSchema from 'simpl-schema';\n\n// create the object using our BaseModel\nBinary = BaseModel.extend();\n\n\n//Assign a collection so the object knows how to perform CRUD operations\nBinary.prototype._collection = Binarys;\n\n// Create a persistent data store for addresses to be stored.\n// HL7.Resources.Patients = new Mongo.Collection('HL7.Resources.Patients');\nBinarys = new Mongo.Collection('Binarys');\n\n//Add the transform to the collection since Meteor.users is pre-defined by the accounts package\nBinarys._transform = function (document) {\n  return new Binary(document);\n};\n\n\n// if (Meteor.isClient){\n//   Meteor.subscribe(\"Binarys\");\n// }\n\n// if (Meteor.isServer){\n//   Meteor.publish(\"Binarys\", function (argument){\n//     if (this.userId) {\n//       return Binarys.find();\n//     } else {\n//       return [];\n//     }\n//   });\n// }\n\nBinarySchema = new SimpleSchema({\n  \"resourceType\" : {\n    type: String,\n    defaultValue: \"Binary\"\n  },\n  \"contentType\" : {\n    optional: true,\n    type: String\n  },\n  \"content\" : {\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n});\nBaseSchema.extend(BinarySchema);\nDomainResourceSchema.extend(BinarySchema);\nBinarys.attachSchema(BinarySchema);\n\nexport default { Binary, Binarys, BinarySchema };"]}